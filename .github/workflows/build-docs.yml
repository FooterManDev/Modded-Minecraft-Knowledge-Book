name: Build

on:
  push:
    branches: ["master"]
  workflow_dispatch:

env:
  INSTANCE: 'Writerside/1'
  DOCKER_VERSION: '243.22562'
  CF_ACC_ID: ${{ secrets.CF_ACC_ID }}
  CF_API_TOK: ${{ secrets.CF_API_TOK }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      zip_path: ${{ steps.discover.outputs.zip_path }}
      build_dir: ${{ steps.discover.outputs.build_dir }}

    steps:
      - uses: actions/checkout@v4

      - name: Writerside Build
        uses: JetBrains/writerside-github-action@v4
        with:
          instance: ${{ env.INSTANCE }}
          docker-version: ${{ env.DOCKER_VERSION }}

      - name: Discover Build Artifacts
        id: discover
        run: |
          echo "Workspace contents:"
          find . -type f -maxdepth 3 | sed 's/^/  /'
          ZIP_PATH=$(find artifacts -type f -name '*.zip' | head -n 1)
          if [ -z "$ZIP_PATH" ]; then
            echo "❌ No ZIP found under artifacts/—check Writerside action output!"
            exit 1
          fi
          BUILD_DIR="${ZIP_PATH%.zip}"
          echo "Found ZIP: $ZIP_PATH"
          echo "Derived build_dir: $BUILD_DIR"
          echo "zip_path=$ZIP_PATH"        >> "$GITHUB_OUTPUT"
          echo "build_dir=$BUILD_DIR"     >> "$GITHUB_OUTPUT"

      - name: Upload Build
        uses: actions/upload-artifact@v4
        with:
          name: zip
          path: ${{ steps.discover.outputs.zip_path }}

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: zip
          path: ${{ steps.discover.outputs.zip_path }}

  deploy-cf:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download Build
        uses: actions/download-artifact@v4
        with:
          name: zip
          path: .

      - name: Debug - list everything
        run: |
          echo "Working directory: $(pwd)"
          echo "Contents of repo root:" 
          ls -R . | sed 's/^/  /'

      - name: Unzip Writerside output
        run: |
          ZIP_FILE="$(basename '${{ needs.build.outputs.zip_path }}')"
          DEST="${{ needs.build.outputs.build_dir }}"
          echo "Unzipping $ZIP_FILE into $DEST"
          mkdir -p "$DEST"
          unzip "$ZIP_FILE" -d "$DEST"

      - name: Deploy to CF
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ env.CF_API_TOK }}
          accountId: ${{ env.CF_ACC_ID }}
          command: pages deploy --project-name=mmkb
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  deploy-gh:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages

    steps:
      - name: Deploy to GH
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          artifact_name: zip
